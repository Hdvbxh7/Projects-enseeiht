(* Les règles de la déduction naturelle doivent être ajoutées à Coq. *) 
Require Import Naturelle. 

(* Ouverture d'une section *) 
Section LogiqueProposition. 

(* Déclaration de variables propositionnelles *) 
Variable A B C E Y R : Prop. 

Theorem Thm_0 : A /\ B -> B /\ A.
I_imp HAetB.
I_et.
E_et_d A.
Hyp HAetB.
E_et_g B.
Hyp HAetB.
Qed.

Theorem Thm_1 : ((A \/ B) -> C) -> (B -> C).
I_imp H0.
I_imp H1.
E_imp(A\/B).
Hyp H0.
I_ou_d.
Hyp H1.
Qed.

Theorem Thm_2 : A -> ~~A.
I_imp H0.
I_non H.
E_non(A).
Hyp H0.
Hyp H.
Qed.

Theorem Thm_3 : (A -> B) -> (~B -> ~A).
I_imp H0.
I_imp H1.
I_non(H).
E_non(B).
E_imp(A).
Hyp H0.
Hyp H.
Hyp H1.
Qed.

Theorem Thm_4 : (~~A) -> A.
I_imp H0.
absurde H1.
E_non(~A).
Hyp H1.
Hyp H0.
Qed.

Theorem Thm_5 : (~B -> ~A) -> (A -> B).
I_imp H0.
I_imp H1.
absurde H.
E_non(A).
Hyp H1.
E_imp(~B).
Hyp H0.
Hyp H.
Qed.

Theorem Thm_6 : ((E -> (Y \/ R)) /\ (Y -> R)) -> ~R -> ~E.
I_imp(H1).
I_imp(H0).
I_non H.
E_ou(Y)(R).
E_imp(E).
E_et_g(Y->R).
Hyp H1.
Hyp H.
I_imp H3.
E_non(R).
E_imp(Y).
E_et_d(E -> Y \/ R).
Hyp H1.
Hyp H3.
Hyp H0.
I_imp H3.
E_non(R).
Hyp H3.
Hyp H0.
Qed.

(* Version en Coq *)

Theorem Coq_Thm_0 : A /\ B -> B /\ A.
intro H.
destruct H as (HA,HB).  (* élimination conjonction *)
split.                  (* introduction conjonction *)
exact HB.               (* hypothèse *)
exact HA.               (* hypothèse *)
Qed.


Theorem Coq_E_imp : ((A -> B) /\ A) -> B.
intro H.
cut A.
destruct H as (Ha,Hb).
exact Ha.
destruct H as (Ha,Hb).
exact Hb.
Qed.

Theorem Coq_E_et_g : (A /\ B) -> A.
intro H.
destruct H as (Ha,Hb).
exact Ha.
Qed.

Theorem Coq_E_ou : ((A \/ B) /\ (A -> C) /\ (B -> C)) -> C.
intro H.
destruct H as (Ha,Hb).
destruct Hb as (H1,H2).
elim(Ha).
exact H1.
exact H2.
Qed.

Theorem Coq_Thm_7 : ((E -> (Y \/ R)) /\ (Y -> R)) -> (~R -> ~E).
intro H.
intro H1.
unfold not.
intro H2.
absurd R.
exact H1.
destruct H.
cut(Y).
exact H0.
  
Qed.

End LogiqueProposition.

